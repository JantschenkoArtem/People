5.Создать класс Person.
Поля:
- имя
- фамилия
- адрес(это отдельный класс)
- зарплата
- авто(это отдельный класс)
- массив счетов(отдельный клас)

6. Создать класс Address.
Поля:
- Страна(Энам)
- Улица
- номер дома
- номер квартиры(если живет не в доме а в квартире,
если в доме то номер квартиры == 0)

7. Создать класс Car.
Поля:
- Марка машины(Энам)
- кол-во дверей
- спортивная или нет
- мощность в лс
- стоимость
- год выпуска
- цвет(энам)

8. Написать класс Account
Поля:
- валюта счета(энам)
- баланс
- номер счета

Вывести имена и фамилии всех лиц, чьи автомобили не красные и не спортивные. + +
Найти и вывести среднюю зарплату всех лиц, проживающих в определенной стране. + +
Вывести информацию о всех лицах, у которых счет в определенной валюте превышает заданный баланс. + +
Перечислить всех, у кого автомобиль был выпущен до определенного года. + +
Найти лиц, живущих на одной улице, но в разных домах. +
Вывести список всех лиц без автомобилей (предполагая, что авто может быть null). -
Определить количество лиц, имеющих спортивный автомобиль с мощностью более 300 л.с. +
Найти и вывести имена и фамилии лиц, имеющих более одного счета (предполагая наличие списка счетов). -
Вывести список лиц, чьи автомобили являются наиболее мощными в своем классе (спортивные/неспортивные). +
Вывести всех лиц, живущих в домах, номера которых заканчиваются на "5". +
Найти лиц с автомобилями определенной марки и цвета.+
Вывести имена лиц, у которых зарплата выше среднего по массиву. +
Определить лиц с наибольшим балансом на счету. +
Вывести список лиц, чьи автомобили были куплены новыми (год выпуска авто равен текущему году). +
Найти лиц, у которых есть автомобиль определенного цвета, но не спортивный. +
Вывести список лиц, проживающих в квартирах (номер квартиры не равен 0).-
Найти и вывести лиц, чьи автомобили имеют стоимость выше заданной.+
Вывести имена и фамилии всех лиц, чьи автомобили имеют четное количество дверей. +
Определить и вывести лицо, имеющего счет с наименьшим балансом. +
Вывести список лиц, имеющих автомобили, которые стоят дороже их зарплаты. +
Найти лиц, проживающих не в своей стране (предполагая, что есть поле гражданства в классе Person).-
Определить количество лиц, у которых есть автомобили с количеством дверей больше 4. -
Вывести список лиц, имеющих автомобиль той же марки, что и автомобиль первого лица в массиве. +
Найти лиц, чей счет в определенной валюте является единственным с такой валютой в массиве. -
Вывести список лиц, у которых нет автомобилей и живут в квартирах. -



//        Address address = new Address(Country.USA, "Wall Street", 1, 1);
//        Address address1 = new Address(Country.USA, "Wall Street", 1, 2);
//        Address address2 = new Address(Country.USA, "Wall Street", 1, 3);
//        Address address3 = new Address(Country.USA, "Wall Street", 1, 4);
//        Address address4 = new Address(Country.UK, "Backer Street", 2, 1);
//        Address address5 = new Address(Country.UK, "Backer Street", 2, 2);
//        Address address6 = new Address(Country.UK, "Backer Street", 2, 3);
//        Address address7 = new Address(Country.UK, "Backer Street", 2, 4);
//        Address address8 = new Address(Country.GERMANY, "BussenStr.", 3, 1);
//        Address address9 = new Address(Country.GERMANY, "BussenStr.", 3, 2);
//        Address address10 = new Address(Country.GERMANY, "BussenStr.", 3, 3);
//        Address address11 = new Address(Country.GERMANY, "BussenStr.", 3, 4);
//        Address address12 = new Address(Country.CANADA, "Wall Street", 4, 1);
//        Address address13 = new Address(Country.FRANCE, "Wall Street", 4, 2);
//        Address[] addresses = {address, address2, address3, address4, address5, address6, address7, address8, address9, address10, address11, address12, address13};
//
//        Car car = new Car(Brand.BMW, 2, true, 500, 2022, Color.BLACK);
//        Car car1 = new Car(Brand.BMW, 4, false, 200, 2020, Color.RED);
//        Car car2 = new Car(Brand.BMW, 4, true, 400, 2022, Color.RED);
//        Car car3 = new Car(Brand.MERCEDES, 4, true, 600, 2010, Color.BLACK);
//        Car car4 = new Car(Brand.MERCEDES, 4, true, 600, 1980, Color.WIETE);
//        Car car5 = new Car(Brand.LADA, 4, false, 100, 2022, Color.RED);
//        Car car6 = new Car(Brand.MAZDA, 2, true, 400, 2021, Color.WIETE);
//        Car car7 = new Car(Brand.TOYOTA, 4, false, 350, 2024, Color.BLU);
//        Car[] cars = {car, car1, car2, car3, car4, car5, car6, car7};
//
//
//        Account account = new Account(Currency.USD, 25000.99, "ID12.12");
//        Account account1 = new Account(Currency.USD, 500000.5, "ID16.61");
//        Account account2 = new Account(Currency.EURO, 12000, "ID.Privet");
//        Account account3 = new Account(Currency.EURO, 242500, "ID123456");
//        Account account4 = new Account(Currency.CAD, 40500, "ID999");
//        Account account5 = new Account(Currency.GBR, 650650, "ID12.12");
//        Account[] accounts = {account, account1, account2, account3, account4, account5};